{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Batches/Project%20Training%202025/projects/Electoral-Voting-System-Using-Blockchain/frontend/src/app/page.jsx"],"sourcesContent":["\"use client\"\r\n// pages/index.tsx\r\nimport { useEffect, useState } from 'react';\r\nimport { Toaster, toast } from 'react-hot-toast';\r\nimport dynamic from 'next/dynamic';\r\n\r\n// Don't initialize ethers as a bare variable\r\nlet ethersLib = null; // Will hold the entire module\r\n\r\n// Import your contract ABI and address\r\nlet ElectionSystemABI;\r\nlet CONTRACT_ADDRESS = \"\";\r\ntry {\r\n  ElectionSystemABI = require('../artifacts/src/smart_contracts/election.sol/ElectionSystem.json').abi;\r\n  // Dynamically import contract address from generated JSON\r\n  CONTRACT_ADDRESS = require('../contract-address.json').address;\r\n} catch (error) {\r\n  console.error(\"Failed to load ABI or contract address:\", error);\r\n}\r\n\r\nfunction Home() {\r\n  const [provider, setProvider] = useState(null);\r\n  const [signer, setSigner] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [account, setAccount] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [elections, setElections] = useState([]); // Initialize as empty array\r\n  const [loading, setLoading] = useState(true);\r\n  const [newElection, setNewElection] = useState({\r\n    name: '',\r\n    description: '',\r\n    startDate: '',\r\n    endDate: ''\r\n  });\r\n  const [newCandidate, setNewCandidate] = useState({\r\n    electionId: 0,\r\n    name: '',\r\n    party: ''\r\n  });\r\n  const [selectedElection, setSelectedElection] = useState(null);\r\n  const [candidates, setCandidates] = useState([]); // Initialize as empty array\r\n  const [isClient, setIsClient] = useState(false);\r\n  const [ethersLoaded, setEthersLoaded] = useState(false);\r\n\r\n  // Set isClient to true and load ethers when component mounts\r\n  useEffect(() => {\r\n    setIsClient(true);\r\n    \r\n    // Import ethers only on client side\r\n    if (typeof window !== 'undefined') {\r\n      import('ethers').then(importedEthers => {\r\n        ethersLib = importedEthers;\r\n        console.log(\"Ethers loaded successfully\");\r\n        console.log(\"Ethers structure:\", Object.keys(importedEthers)); // Show top-level exports\r\n        console.log(\"Ethers providers:\", importedEthers.providers ? Object.keys(importedEthers.providers) : \"No providers property\");\r\n        setEthersLoaded(true);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // Connect to MetaMask\r\n  const connectWallet = async () => {\r\n    if (!isClient || !ethersLoaded) {\r\n      toast.error(\"Application is initializing. Please try again in a moment.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (window.ethereum) {\r\n        // Request account access\r\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n        \r\n        // Diagnose the ethers structure to locate BrowserProvider\r\n        console.log(\"Ethers module structure:\", Object.keys(ethersLib));\r\n        \r\n        // Try multiple potential locations for BrowserProvider\r\n        let provider;\r\n        if (ethersLib.BrowserProvider) {\r\n          provider = new ethersLib.BrowserProvider(window.ethereum);\r\n        } else if (ethersLib.providers && ethersLib.providers.BrowserProvider) {\r\n          provider = new ethersLib.providers.BrowserProvider(window.ethereum);\r\n        } else if (ethersLib.providers && ethersLib.providers.Web3Provider) {\r\n          // Fallback to Web3Provider for ethers v5 compatibility\r\n          provider = new ethersLib.providers.Web3Provider(window.ethereum);\r\n        } else {\r\n          throw new Error(\"Could not find a compatible Provider in the ethers library\");\r\n        }\r\n        \r\n        const signer = await provider.getSigner();\r\n        const account = await signer.getAddress();\r\n        \r\n        // Use Contract constructor directly from ethersLib\r\n        const contract = new ethersLib.Contract(CONTRACT_ADDRESS, ElectionSystemABI, signer);\r\n        \r\n        console.log('Provider created:', provider);\r\n        console.log('Signer obtained:', await signer.getAddress());\r\n        console.log('Connected account:', account);\r\n        \r\n        setProvider(provider);\r\n        setSigner(signer);\r\n        setContract(contract);\r\n        setAccount(account);\r\n        \r\n        try {\r\n          console.log('Checking admin status for account:', account);\r\n          const adminResult = await contract.isAdmin(account);\r\n          console.log('Admin status result:', adminResult.toString());\r\n          setIsAdmin(Boolean(adminResult));\r\n          \r\n          await loadElections(contract);\r\n        } catch (adminError) {\r\n          console.error('Error checking admin status:', adminError);\r\n          setIsAdmin(false);\r\n          toast.error(\"Error checking admin status: \" + (adminError.message || adminError));\r\n        }\r\n      } else {\r\n        toast.error(\"Please install MetaMask to use this application\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error connecting to wallet:\", error);\r\n      toast.error(\"Failed to connect wallet: \" + (error.message || error));\r\n    }\r\n  };\r\n\r\n  // Add logging to debug the elections data\r\n  const loadElections = async (contractInstance) => {\r\n    try {\r\n      setLoading(true);\r\n      const count = await contractInstance.getElectionCount();\r\n      console.log(\"Election count:\", Number(count));\r\n\r\n      const electionArray = [];\r\n      // Update this to use Number() instead of .toNumber()\r\n      for (let i = 0; i < Number(count); i++) {\r\n        const details = await contractInstance.getElectionDetails(i);\r\n        console.log(`Election ${i} details:`, details);\r\n\r\n        electionArray.push({\r\n          id: i,\r\n          name: details.name,\r\n          description: details.description,\r\n          // Update these to use Number() instead of .toNumber()\r\n          startTime: new Date(Number(details.startTime) * 1000).toLocaleString(),\r\n          endTime: new Date(Number(details.endTime) * 1000).toLocaleString(),\r\n          isActive: details.isActive,\r\n          candidateCount: Number(details.candidateCount)\r\n        });\r\n      }\r\n\r\n      setElections(electionArray);\r\n      console.log(\"Elections loaded:\", electionArray);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error loading elections:\", error);\r\n      toast.error(\"Failed to load elections: \" + (error.message || error));\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Create a new election\r\n  const createElection = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (!contract) return;\r\n      \r\n      const startTime = Math.floor(new Date(newElection.startDate).getTime() / 1000);\r\n      const endTime = Math.floor(new Date(newElection.endDate).getTime() / 1000);\r\n      \r\n      const tx = await contract.createElection(\r\n        newElection.name,\r\n        newElection.description,\r\n        startTime,\r\n        endTime\r\n      );\r\n      \r\n      toast.loading(\"Creating election...\");\r\n      await tx.wait();\r\n      toast.dismiss();\r\n      toast.success(\"Election created successfully\");\r\n      \r\n      setNewElection({\r\n        name: '',\r\n        description: '',\r\n        startDate: '',\r\n        endDate: ''\r\n      });\r\n      \r\n      loadElections(contract);\r\n    } catch (error) {\r\n      console.error(\"Error creating election:\", error);\r\n      toast.error(\"Failed to create election: \" + (error.message || error));\r\n    }\r\n  };\r\n\r\n  // Add a candidate to an election\r\n  const addCandidate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (!contract) return;\r\n      \r\n      const tx = await contract.addCandidate(\r\n        newCandidate.electionId,\r\n        newCandidate.name,\r\n        newCandidate.party\r\n      );\r\n      \r\n      toast.loading(\"Adding candidate...\");\r\n      await tx.wait();\r\n      toast.dismiss();\r\n      toast.success(\"Candidate added successfully\");\r\n      \r\n      setNewCandidate({\r\n        electionId: 0,\r\n        name: '',\r\n        party: ''\r\n      });\r\n      \r\n      if (selectedElection !== null) {\r\n        loadCandidates(selectedElection);\r\n      }\r\n      \r\n      loadElections(contract);\r\n    } catch (error) {\r\n      console.error(\"Error adding candidate:\", error);\r\n      toast.error(\"Failed to add candidate: \" + (error.message || error));\r\n    }\r\n  };\r\n\r\n  // Toggle election active status\r\n  const toggleElection = async (electionId, isActive) => {\r\n    try {\r\n      if (!contract) return;\r\n      \r\n      const tx = await contract.toggleElection(electionId, !isActive);\r\n      \r\n      toast.loading(`${isActive ? \"Deactivating\" : \"Activating\"} election...`);\r\n      await tx.wait();\r\n      toast.dismiss();\r\n      toast.success(`Election ${isActive ? \"deactivated\" : \"activated\"} successfully`);\r\n      \r\n      loadElections(contract);\r\n    } catch (error) {\r\n      console.error(\"Error toggling election:\", error);\r\n      toast.error(\"Failed to toggle election status: \" + (error.message || error));\r\n    }\r\n  };\r\n\r\n  // Load candidates for a specific election\r\n  const loadCandidates = async (electionId) => {\r\n    try {\r\n      if (!contract) return;\r\n      \r\n      setSelectedElection(electionId);\r\n      const candidateCount = await contract.getCandidateCount(electionId);\r\n      const candidateArray = [];\r\n      \r\n      // Change this to use Number() instead of .toNumber()\r\n      for (let i = 0; i < Number(candidateCount); i++) {\r\n        const details = await contract.getCandidateDetails(electionId, i);\r\n        candidateArray.push({\r\n          id: i,\r\n          name: details.name,\r\n          party: details.party,\r\n          voteCount: details.voteCount.toString()\r\n        });\r\n      }\r\n      \r\n      setCandidates(candidateArray);\r\n    } catch (error) {\r\n      console.error(\"Error loading candidates:\", error);\r\n      toast.error(\"Failed to load candidates: \" + (error.message || error));\r\n    }\r\n  };\r\n\r\n  // Cast a vote\r\n  const castVote = async (electionId, candidateId) => {\r\n    try {\r\n      if (!contract) return;\r\n      \r\n      // Check if user has already voted\r\n      const hasVoted = await contract.hasVoted(electionId, account);\r\n      if (hasVoted) {\r\n        toast.error(\"You have already voted in this election\");\r\n        return;\r\n      }\r\n      \r\n      const tx = await contract.castVote(electionId, candidateId);\r\n      \r\n      toast.loading(\"Casting vote...\");\r\n      await tx.wait();\r\n      toast.dismiss();\r\n      toast.success(\"Vote cast successfully\");\r\n      \r\n      loadCandidates(electionId);\r\n    } catch (error) {\r\n      console.error(\"Error casting vote:\", error);\r\n      toast.error(\"Failed to cast vote: \" + (error.message || error));\r\n    }\r\n  };\r\n\r\n  // Only run on client side\r\n  useEffect(() => {\r\n    if (isClient && ethersLoaded) {\r\n      if (typeof window !== 'undefined' && window.ethereum) {\r\n        // Handle account changes\r\n        window.ethereum.on('accountsChanged', () => {\r\n          window.location.reload();\r\n        });\r\n        \r\n        // Attempt to connect (but don't force it)\r\n        connectWallet().catch(console.error);\r\n      }\r\n    }\r\n    \r\n    return () => {\r\n      if (typeof window !== 'undefined' && window.ethereum) {\r\n        window.ethereum.removeAllListeners('accountsChanged');\r\n      }\r\n    };\r\n  }, [isClient, ethersLoaded]); // Add ethersLoaded as a dependency\r\n\r\n  // If we're not on client side, show a loading state\r\n  if (!isClient) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-6 flex flex-col justify-center sm:py-12\">\r\n      <div className=\"relative py-3 sm:max-w-5xl sm:mx-auto\">\r\n        <div className=\"relative px-4 py-10 bg-white shadow-lg sm:rounded-3xl sm:p-20\">\r\n          \r\n          <div className=\"max-w-md mx-auto\">\r\n            <div>\r\n              <h1 className=\"text-2xl font-semibold\">Blockchain Voting System</h1>\r\n              {account ? (\r\n                <p className=\"mt-2\">Connected: {account.substring(0, 6)}...{account.substring(account.length - 4)}</p>\r\n              ) : (\r\n                <button \r\n                  onClick={connectWallet}\r\n                  className=\"mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n                >\r\n                  Connect Wallet\r\n                </button>\r\n              )}\r\n            </div>\r\n            \r\n            {isAdmin && (\r\n              <div className=\"mt-8\">\r\n                <h2 className=\"text-xl font-semibold mb-4\">Admin Panel</h2>\r\n                \r\n                <div className=\"mb-8\">\r\n                  <h3 className=\"text-lg font-medium mb-2\">Create New Election</h3>\r\n                  <form onSubmit={createElection} className=\"space-y-4\">\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700\">Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={newElection.name}\r\n                        onChange={(e) => setNewElection({...newElection, name: e.target.value})}\r\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700\">Description</label>\r\n                      <textarea\r\n                        value={newElection.description}\r\n                        onChange={(e) => setNewElection({...newElection, description: e.target.value})}\r\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700\">Start Date</label>\r\n                      <input\r\n                        type=\"datetime-local\"\r\n                        value={newElection.startDate}\r\n                        onChange={(e) => setNewElection({...newElection, startDate: e.target.value})}\r\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700\">End Date</label>\r\n                      <input\r\n                        type=\"datetime-local\"\r\n                        value={newElection.endDate}\r\n                        onChange={(e) => setNewElection({...newElection, endDate: e.target.value})}\r\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"w-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\r\n                    >\r\n                      Create Election\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n                \r\n                <div>\r\n                  <h3 className=\"text-lg font-medium mb-2\">Add Candidate</h3>\r\n                  <form onSubmit={addCandidate} className=\"space-y-4\">\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700\">Election</label>\r\n                      <select\r\n                        value={newCandidate.electionId}\r\n                        onChange={(e) => setNewCandidate({...newCandidate, electionId: parseInt(e.target.value)})}\r\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        required\r\n                      >\r\n                        <option value=\"\">Select Election</option>\r\n                        {elections && elections.length > 0 && elections.map((election) => (\r\n                          <option key={election.id} value={election.id}>\r\n                            {election.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700\">Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={newCandidate.name}\r\n                        onChange={(e) => setNewCandidate({...newCandidate, name: e.target.value})}\r\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700\">Party</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={newCandidate.party}\r\n                        onChange={(e) => setNewCandidate({...newCandidate, party: e.target.value})}\r\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"w-full bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\"\r\n                    >\r\n                      Add Candidate\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"mt-8\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">Elections</h2>\r\n              {loading ? (\r\n                <p>Loading elections...</p>\r\n              ) : !elections || elections.length === 0 ? (\r\n                <p>No elections available</p>\r\n              ) : (\r\n                elections && elections.length > 0 ? (\r\n                  elections.map((election) => (\r\n                    <div key={election.id} className=\"border p-4 rounded-md\">\r\n                      <h3 className=\"text-lg font-medium\">{election.name}</h3>\r\n                      <p className=\"text-sm text-gray-600 mt-1\">{election.description}</p>\r\n                      <div className=\"mt-2 text-sm\">\r\n                        <p>Start: {election.startTime}</p>\r\n                        <p>End: {election.endTime}</p>\r\n                        <p>Status: {election.isActive ? \"Active\" : \"Inactive\"}</p>\r\n                        <p>Candidates: {election.candidateCount}</p>\r\n                      </div>\r\n                      <div className=\"mt-4 flex space-x-2\">\r\n                        <button\r\n                          onClick={() => loadCandidates(election.id)}\r\n                          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-3 rounded text-sm\"\r\n                        >\r\n                          View Candidates\r\n                        </button>\r\n                        {isAdmin && (\r\n                          <button\r\n                            onClick={() => toggleElection(election.id, election.isActive)}\r\n                            className={`${\r\n                              election.isActive ? \"bg-red-500 hover:bg-red-700\" : \"bg-green-500 hover:bg-green-700\"\r\n                            } text-white font-bold py-1 px-3 rounded text-sm`}\r\n                          >\r\n                            {election.isActive ? \"Deactivate\" : \"Activate\"}\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p>No elections available</p>\r\n                )\r\n              )}\r\n            </div>\r\n            \r\n            {selectedElection !== null && (\r\n              <div className=\"mt-8\">\r\n                <h2 className=\"text-xl font-semibold mb-4\">\r\n                  Candidates for {elections && elections.find(e => e.id === selectedElection)?.name}\r\n                </h2>\r\n                {!candidates || candidates.length === 0 ? (\r\n                  <p>No candidates available</p>\r\n                ) : (\r\n                  <div className=\"space-y-4\">\r\n                    {candidates.map((candidate) => (\r\n                      <div key={candidate.id} className=\"border p-4 rounded-md\">\r\n                        <h3 className=\"text-lg font-medium\">{candidate.name}</h3>\r\n                        <p className=\"text-sm text-gray-600\">Party: {candidate.party}</p>\r\n                        <p className=\"text-sm\">Votes: {candidate.voteCount}</p>\r\n                        <button\r\n                          onClick={() => castVote(selectedElection, candidate.id)}\r\n                          className=\"mt-2 bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-1 px-3 rounded text-sm\"\r\n                          disabled={!elections || !elections.find(e => e.id === selectedElection)?.isActive}\r\n                        >\r\n                          Vote\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Use dynamic export with no SSR to avoid window-is-not-defined errors\r\nexport default dynamic(() => Promise.resolve(Home), { ssr: false });"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 896, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 901, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Batches/Project%20Training%202025/projects/Electoral-Voting-System-Using-Blockchain/frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 903, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 908, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Batches/Project%20Training%202025/projects/Electoral-Voting-System-Using-Blockchain/frontend/node_modules/%40swc/helpers/cjs/_interop_require_default.cjs"],"sourcesContent":["\"use strict\";\n\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nexports._ = _interop_require_default;\n"],"names":[],"mappings":"AAAA;AAEA,SAAS,yBAAyB,GAAG;IACjC,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AACxD;AACA,QAAQ,CAAC,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 915, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 920, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Batches/Project%20Training%202025/projects/Electoral-Voting-System-Using-Blockchain/frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxRuntime\n"],"names":["module","exports","require","vendored","ReactJsxRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,eAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 922, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 927, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Batches/Project%20Training%202025/projects/Electoral-Voting-System-Using-Blockchain/frontend/node_modules/next/src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx"],"sourcesContent":["'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n"],"names":["BailoutToCSR","reason","children","window","BailoutToCSRError"],"mappings":"AAAA;;;;;+BAcgBA,gBAAAA;;;eAAAA;;;8BAXkB;AAW3B,SAASA,aAAa,KAAuC;IAAvC,IAAA,EAAEC,MAAM,EAAEC,QAAQ,EAAqB,GAAvC;IAC3B,IAAI,OAAOC,WAAW,aAAa;QACjC,MAAM,OAAA,cAA6B,CAA7B,IAAIC,cAAAA,iBAAiB,CAACH,SAAtB,qBAAA;mBAAA;wBAAA;0BAAA;QAA4B;IACpC;IAEA,OAAOC;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 950, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 955, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Batches/Project%20Training%202025/projects/Electoral-Voting-System-Using-Blockchain/frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-dom.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].ReactDOM\n"],"names":["module","exports","require","vendored","ReactDOM"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,QAAQ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 957, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 962, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Batches/Project%20Training%202025/projects/Electoral-Voting-System-Using-Blockchain/frontend/node_modules/next/src/shared/lib/encode-uri-path.ts"],"sourcesContent":["export function encodeURIPath(file: string) {\n  return file\n    .split('/')\n    .map((p) => encodeURIComponent(p))\n    .join('/')\n}\n"],"names":["encodeURIPath","file","split","map","p","encodeURIComponent","join"],"mappings":";;;;+BAAgBA,iBAAAA;;;eAAAA;;;AAAT,SAASA,cAAcC,IAAY;IACxC,OAAOA,KACJC,KAAK,CAAC,KACNC,GAAG,CAAC,CAACC,IAAMC,mBAAmBD,IAC9BE,IAAI,CAAC;AACV","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 975, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 980, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Batches/Project%20Training%202025/projects/Electoral-Voting-System-Using-Blockchain/frontend/node_modules/next/src/shared/lib/lazy-dynamic/preload-chunks.tsx"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n"],"names":["PreloadChunks","moduleIds","window","workStore","workAsyncStorage","getStore","undefined","allFiles","reactLoadableManifest","manifest","key","chunks","files","push","length","map","chunk","href","assetPrefix","encodeURIPath","isCss","endsWith","link","precedence","rel","as","preload","fetchPriority"],"mappings":"AAAA;;;;;+BAOgBA,iBAAAA;;;eAAAA;;;;0BALQ;0CAES;+BACH;AAEvB,SAASA,cAAc,KAI7B;IAJ6B,IAAA,EAC5BC,SAAS,EAGV,GAJ6B;IAK5B,+EAA+E;IAC/E,IAAI,OAAOC,WAAW,aAAa;QACjC,OAAO;IACT;IAEA,MAAMC,YAAYC,0BAAAA,gBAAgB,CAACC,QAAQ;IAC3C,IAAIF,cAAcG,WAAW;QAC3B,OAAO;IACT;IAEA,MAAMC,WAAW,EAAE;IAEnB,4EAA4E;IAC5E,kDAAkD;IAClD,IAAIJ,UAAUK,qBAAqB,IAAIP,WAAW;QAChD,MAAMQ,WAAWN,UAAUK,qBAAqB;QAChD,KAAK,MAAME,OAAOT,UAAW;YAC3B,IAAI,CAACQ,QAAQ,CAACC,IAAI,EAAE;YACpB,MAAMC,SAASF,QAAQ,CAACC,IAAI,CAACE,KAAK;YAClCL,SAASM,IAAI,IAAIF;QACnB;IACF;IAEA,IAAIJ,SAASO,MAAM,KAAK,GAAG;QACzB,OAAO;IACT;IAEA,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAAA,YAAA,QAAA,EAAA;kBACGP,SAASQ,GAAG,CAAC,CAACC;YACb,MAAMC,OAAUd,UAAUe,WAAW,GAAC,YAASC,CAAAA,GAAAA,eAAAA,aAAa,EAACH;YAC7D,MAAMI,QAAQJ,MAAMK,QAAQ,CAAC;YAC7B,wEAAwE;YACxE,0IAA0I;YAC1I,gDAAgD;YAChD,IAAID,OAAO;gBACT,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAACE,QAAAA;oBAEC,aAAa;oBACbC,YAAW;oBACXN,MAAMA;oBACNO,KAAI;oBACJC,IAAG;mBALET;YAQX,OAAO;gBACL,kEAAkE;gBAClEU,CAAAA,GAAAA,UAAAA,OAAO,EAACT,MAAM;oBACZQ,IAAI;oBACJE,eAAe;gBACjB;gBACA,OAAO;YACT;QACF;;AAGN","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1045, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1050, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Batches/Project%20Training%202025/projects/Electoral-Voting-System-Using-Blockchain/frontend/node_modules/next/src/shared/lib/lazy-dynamic/loadable.tsx"],"sourcesContent":["import { Suspense, Fragment, lazy } from 'react'\nimport { BailoutToCSR } from './dynamic-bailout-to-csr'\nimport type { ComponentModule } from './types'\nimport { PreloadChunks } from './preload-chunks'\n\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule<P>(\n  mod: React.ComponentType<P> | ComponentModule<P> | undefined\n): {\n  default: React.ComponentType<P>\n} {\n  // Check \"default\" prop before accessing it, as it could be client reference proxy that could break it reference.\n  // Cases:\n  // mod: { default: Component }\n  // mod: Component\n  // mod: { default: proxy(Component) }\n  // mod: proxy(Component)\n  const hasDefault = mod && 'default' in mod\n  return {\n    default: hasDefault\n      ? (mod as ComponentModule<P>).default\n      : (mod as React.ComponentType<P>),\n  }\n}\n\nconst defaultOptions = {\n  loader: () => Promise.resolve(convertModule(() => null)),\n  loading: null,\n  ssr: true,\n}\n\ninterface LoadableOptions {\n  loader?: () => Promise<React.ComponentType<any> | ComponentModule<any>>\n  loading?: React.ComponentType<any> | null\n  ssr?: boolean\n  modules?: string[]\n}\n\nfunction Loadable(options: LoadableOptions) {\n  const opts = { ...defaultOptions, ...options }\n  const Lazy = lazy(() => opts.loader().then(convertModule))\n  const Loading = opts.loading\n\n  function LoadableComponent(props: any) {\n    const fallbackElement = Loading ? (\n      <Loading isLoading={true} pastDelay={true} error={null} />\n    ) : null\n\n    // If it's non-SSR or provided a loading component, wrap it in a suspense boundary\n    const hasSuspenseBoundary = !opts.ssr || !!opts.loading\n    const Wrap = hasSuspenseBoundary ? Suspense : Fragment\n    const wrapProps = hasSuspenseBoundary ? { fallback: fallbackElement } : {}\n    const children = opts.ssr ? (\n      <>\n        {/* During SSR, we need to preload the CSS from the dynamic component to avoid flash of unstyled content */}\n        {typeof window === 'undefined' ? (\n          <PreloadChunks moduleIds={opts.modules} />\n        ) : null}\n        <Lazy {...props} />\n      </>\n    ) : (\n      <BailoutToCSR reason=\"next/dynamic\">\n        <Lazy {...props} />\n      </BailoutToCSR>\n    )\n\n    return <Wrap {...wrapProps}>{children}</Wrap>\n  }\n\n  LoadableComponent.displayName = 'LoadableComponent'\n\n  return LoadableComponent\n}\n\nexport default Loadable\n"],"names":["convertModule","mod","hasDefault","default","defaultOptions","loader","Promise","resolve","loading","ssr","Loadable","options","opts","Lazy","lazy","then","Loading","LoadableComponent","props","fallbackElement","isLoading","pastDelay","error","hasSuspenseBoundary","Wrap","Suspense","Fragment","wrapProps","fallback","children","window","PreloadChunks","moduleIds","modules","BailoutToCSR","reason","displayName"],"mappings":";;;;+BA4EA,WAAA;;;eAAA;;;;uBA5EyC;qCACZ;+BAEC;AAE9B,yFAAyF;AACzF,qGAAqG;AACrG,qEAAqE;AACrE,SAASA,cACPC,GAA4D;IAI5D,iHAAiH;IACjH,SAAS;IACT,8BAA8B;IAC9B,iBAAiB;IACjB,qCAAqC;IACrC,wBAAwB;IACxB,MAAMC,aAAaD,OAAO,aAAaA;IACvC,OAAO;QACLE,SAASD,aACJD,IAA2BE,OAAO,GAClCF;IACP;AACF;AAEA,MAAMG,iBAAiB;IACrBC,QAAQ,IAAMC,QAAQC,OAAO,CAACP,cAAc,IAAM;IAClDQ,SAAS;IACTC,KAAK;AACP;AASA,SAASC,SAASC,OAAwB;IACxC,MAAMC,OAAO;QAAE,GAAGR,cAAc;QAAE,GAAGO,OAAO;IAAC;IAC7C,MAAME,OAAAA,WAAAA,GAAOC,CAAAA,GAAAA,OAAAA,IAAI,EAAC,IAAMF,KAAKP,MAAM,GAAGU,IAAI,CAACf;IAC3C,MAAMgB,UAAUJ,KAAKJ,OAAO;IAE5B,SAASS,kBAAkBC,KAAU;QACnC,MAAMC,kBAAkBH,UAAAA,WAAAA,GACtB,CAAA,GAAA,YAAA,GAAA,EAACA,SAAAA;YAAQI,WAAW;YAAMC,WAAW;YAAMC,OAAO;aAChD;QAEJ,kFAAkF;QAClF,MAAMC,sBAAsB,CAACX,KAAKH,GAAG,IAAI,CAAC,CAACG,KAAKJ,OAAO;QACvD,MAAMgB,OAAOD,sBAAsBE,OAAAA,QAAQ,GAAGC,OAAAA,QAAQ;QACtD,MAAMC,YAAYJ,sBAAsB;YAAEK,UAAUT;QAAgB,IAAI,CAAC;QACzE,MAAMU,WAAWjB,KAAKH,GAAG,GAAA,WAAA,GACvB,CAAA,GAAA,YAAA,IAAA,EAAA,YAAA,QAAA,EAAA;;gBAEG,OAAOqB,WAAW,cAAA,WAAA,GACjB,CAAA,GAAA,YAAA,GAAA,EAACC,eAAAA,aAAa,EAAA;oBAACC,WAAWpB,KAAKqB,OAAO;qBACpC;8BACJ,CAAA,GAAA,YAAA,GAAA,EAACpB,MAAAA;oBAAM,GAAGK,KAAK;;;2BAGjB,CAAA,GAAA,YAAA,GAAA,EAACgB,qBAAAA,YAAY,EAAA;YAACC,QAAO;sBACnB,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,EAACtB,MAAAA;gBAAM,GAAGK,KAAK;;;QAInB,OAAA,WAAA,GAAO,CAAA,GAAA,YAAA,GAAA,EAACM,MAAAA;YAAM,GAAGG,SAAS;sBAAGE;;IAC/B;IAEAZ,kBAAkBmB,WAAW,GAAG;IAEhC,OAAOnB;AACT;MAEA,WAAeP","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1132, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Batches/Project%20Training%202025/projects/Electoral-Voting-System-Using-Blockchain/frontend/node_modules/next/src/shared/lib/app-dynamic.tsx"],"sourcesContent":["import type React from 'react'\nimport type { JSX } from 'react'\nimport Loadable from './lazy-dynamic/loadable'\n\nimport type {\n  LoadableGeneratedOptions,\n  DynamicOptionsLoadingProps,\n  Loader,\n  LoaderComponent,\n} from './lazy-dynamic/types'\n\nexport {\n  type LoadableGeneratedOptions,\n  type DynamicOptionsLoadingProps,\n  type Loader,\n  type LoaderComponent,\n}\n\nexport type DynamicOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: () => JSX.Element | null\n  loader?: Loader<P>\n  loadableGenerated?: LoadableGeneratedOptions\n  modules?: string[]\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = DynamicOptions<P>\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  const loadableOptions: LoadableOptions<P> = {}\n\n  if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n  }\n\n  const mergedOptions = {\n    ...loadableOptions,\n    ...options,\n  }\n\n  return Loadable({\n    ...mergedOptions,\n    modules: mergedOptions.loadableGenerated?.modules,\n  })\n}\n"],"names":["dynamic","dynamicOptions","options","mergedOptions","loadableOptions","loader","Loadable","modules","loadableGenerated"],"mappings":";;;;+BAkCA,WAAA;;;eAAwBA;;;;mEAhCH;AAgCN,SAASA,QACtBC,cAA6C,EAC7CC,OAA2B;QAehBC;IAbX,MAAMC,kBAAsC,CAAC;IAE7C,IAAI,OAAOH,mBAAmB,YAAY;QACxCG,gBAAgBC,MAAM,GAAGJ;IAC3B;IAEA,MAAME,gBAAgB;QACpB,GAAGC,eAAe;QAClB,GAAGF,OAAO;IACZ;IAEA,OAAOI,CAAAA,GAAAA,UAAAA,OAAQ,EAAC;QACd,GAAGH,aAAa;QAChBI,OAAO,EAAA,CAAEJ,mCAAAA,cAAcK,iBAAiB,KAAA,OAAA,KAAA,IAA/BL,iCAAiCI,OAAO;IACnD;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}